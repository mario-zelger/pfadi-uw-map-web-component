name: Release Build

on:
  workflow_dispatch:
    inputs:
      create-release:
        description: 'Create GitHub release'
        required: true
        type: boolean
        default: true

permissions:
  contents: write
  actions: write

jobs:
  get-versions:
    name: Get SemVer
    runs-on: ubuntu-latest
    outputs:
      semverNext: ${{ steps.semver-info.outputs.nextVersion }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: ${{ github.ref_name }}

      - name: Output SemVer
        id: semver-info
        run: |
          nextVersion="${{ steps.semver.outputs.next }}"
          echo "Current version: ${{ steps.semver.outputs.current }}"
          echo "Next version: ${{ steps.semver.outputs.next }}"
          echo "Next strict version: ${{ steps.semver.outputs.nextStrict }}"
          echo "Next major version: ${{ steps.semver.outputs.nextMajor }}"
          echo "Next major strict version: ${{ steps.semver.outputs.nextMajorStrict }}"
          echo "Bump: ${{ steps.semver.outputs.bump }}"
          echo "Is prerelease: ${{ inputs.is-prerelease }}"
          if [ "${{ inputs.is-prerelease }}" = "false" ]; then
            echo "nextVersion=$nextVersion" >> "$GITHUB_OUTPUT"
          else
            echo "nextVersion=${nextVersion}-beta" >> "$GITHUB_OUTPUT"
          fi

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24.x

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build:minified

      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ./dist

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ get-versions, build ]
    if: ${{ inputs.create-release }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Download app build
        uses: actions/download-artifact@v5
        with:
          name: app-build
          path: ./dist

      - name: Create tag
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.get-versions.outputs.semverNext }}',
              sha: context.sha
            })

      - name: Get CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ needs.get-versions.outputs.semverNext }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.get-versions.outputs.semverNext }}
          body: ${{ steps.changelog.outputs.changes }}
          tag: ${{ needs.get-versions.outputs.semverNext }}
          commit: ${{ github.sha }}
          artifacts: "./dist/*.js"
          prerelease: false,
          makeLatest: true
          token: ${{ github.token }}